{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/App.module.css","components/Searchform/Searchform.js","components/Searchbar/Searchbar.js","components/services/images-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/App.js","reportWebVitals.js","index.js","components/Searchform/Searchform.module.css"],"names":["module","exports","Searchform","state","searchQuery","handleSearchQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","onSubmit","props","preventDefault","trim","alert","this","className","s","SearchForm","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","Component","Searchbar","children","api","fetchImage","page","fetch","then","response","json","ImageGalleryItem","smallPicture","largePicture","alt","item","src","image","data-url","Spinner","div","color","height","width","Button","onClick","ImageGallery","images","error","status","changePageNumber","handleImgClick","target","tagName","dataset","url","prevProps","prevState","currentSearchQuery","currentPage","imageAPI","newImages","console","log","hits","length","catch","window","scrollTo","top","document","documentElement","scrollHeight","behavior","map","index","webformatURL","largeImageURL","tags","id","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","addEventListener","removeEventListener","createPortal","Overlay","App","showModal","handleFormSubmit","handleImageClick","toggleModal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1e404a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__13wML\",\"image\":\"ImageGalleryItem_image__cC2Kn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__ATlQY\",\"Modal\":\"Modal_Modal__1ds0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__jeNhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1ljTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Mvsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__btqmk\"};","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchform.module.css';\nimport PropTypes from 'prop-types';\n\nexport default class Searchform extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = {\n    searchQuery: '',\n  };\n\n  handleSearchQueryChange = event => {\n    this.setState({ searchQuery: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    const { searchQuery } = this.state;\n    const { onSubmit } = this.props;\n    event.preventDefault();\n    if (searchQuery.trim() === '') {\n      // toast.error('The request is empty');\n\n      return alert('The request is empty');\n    }\n    onSubmit(searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.label}>Search</span>\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={this.handleSearchQueryChange}\n        />\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport SearchForm from '../Searchform';\nimport s from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ children }) => {\n  return <header className={s.Searchbar}>{children}</header>;\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","function fetchImage(searchQuery, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=19110749-e340c63922b3f8a4d502270f7&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => response.json());\n}\n\nconst api = { fetchImage };\nexport default api;\n","import React, { Component } from 'react';\nimport api from '../services/images-api';\nimport s from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ smallPicture, largePicture, alt }) => {\n  return (\n    <li className={s.item}>\n      <img\n        src={smallPicture}\n        alt={alt}\n        className={s.image}\n        data-url={largePicture}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  smallPicture: PropTypes.string.isRequired,\n  largePicture: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Spinner.module.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <div className={s.div}>\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Loader from '../Loader';\nimport Button from '../Button';\nimport imageAPI from '../services/images-api';\nimport PropTypes from 'prop-types';\n\n// const Status = {\n//   IDLE: 'idle',\n//   PENDING: 'pending',\n//   RESOLVED: 'resolved',\n//   REJECTED: 'rejected',\n// };\n\nexport default class ImageGallery extends Component {\n  static propTypes = {\n    searchQuery: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  state = {\n    images: [],\n    error: null,\n    status: 'idle',\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentSearchQuery = this.props.searchQuery;\n    const currentPage = this.state.page;\n    if (\n      prevProps.searchQuery !== currentSearchQuery ||\n      prevState.page !== currentPage\n    ) {\n      this.setState({ status: 'pending' });\n\n      imageAPI\n        .fetchImage(currentSearchQuery, currentPage)\n        .then(newImages => {\n          console.log(newImages);\n          if (newImages.hits.length > 0) {\n            return this.setState(prevState => ({\n              images: [...prevState.images, ...newImages.hits],\n              status: 'resolved',\n            }));\n          }\n          return this.setState({\n            error: `по запросу ${currentSearchQuery} ничего не найдено`,\n            status: 'rejected',\n          });\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  changePageNumber = page => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  handleImgClick = event => {\n    if (event.target.tagName === 'IMG') {\n      this.props.onClick(event.target.dataset.url, event.target.alt);\n    }\n  };\n\n  render() {\n    const { error, images, status } = this.state;\n\n    if (status === 'idle') {\n      return <></>;\n    }\n    if (status === 'pending') {\n      return <Loader />;\n    }\n    if (status === 'rejected') {\n      return <h1>{error}</h1>;\n    }\n    if (status === 'resolved') {\n      return (\n        <div>\n          <ul className={s.ImageGallery} onClick={this.handleImgClick}>\n            {images.map((image, index) => (\n              <ImageGalleryItem\n                key={`${image.id}${index}`}\n                smallPicture={image.webformatURL}\n                largePicture={image.largeImageURL}\n                alt={image.tags}\n              />\n            ))}\n          </ul>\n          <Button onClick={this.changePageNumber} />\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\nimport { doc } from 'prettier';\n\nconst modalRoot = document.querySelector('#modal-root');\nexport default class Modal extends Component {\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Searchbar from './Searchbar';\nimport Searchform from './Searchform';\nimport ImageGallery from './ImageGallery';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Button from './Button';\nimport Modal from './Modal';\nimport fetchImage from './services/images-api';\nimport s from './App.module.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    showModal: false,\n    src: '',\n    alt: '',\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  handleImageClick = (src, alt) => {\n    this.setState({ src, alt });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { searchQuery, src, alt, showModal } = this.state;\n    return (\n      <div>\n        <Searchbar>\n          <Searchform onSubmit={this.handleFormSubmit} />\n        </Searchbar>\n        <ImageGallery\n          searchQuery={searchQuery}\n          onClick={this.handleImageClick}\n        />\n        {showModal && <Modal src={src} alt={alt} onClose={this.toggleModal} />}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchform_SearchForm__GUv7z\",\"button\":\"Searchform_button__36XDP\",\"label\":\"Searchform_label__3PmMX\",\"input\":\"Searchform_input__2r4VB\"};"],"sourceRoot":""}