{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchform/Searchform.js","components/Searchbar/Searchbar.js","services/images-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/App.js","reportWebVitals.js","index.js","components/Searchform/Searchform.module.css"],"names":["module","exports","Searchform","state","searchQuery","handleSearchQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","onSubmit","props","preventDefault","trim","alert","this","className","s","SearchForm","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","Component","Searchbar","children","api","fetchImage","page","fetch","then","response","json","ImageGalleryItem","smallPicture","largePicture","alt","item","src","image","data-url","Spinner","div","color","height","width","Button","onClick","Status","ImageGallery","images","error","status","changePageNumber","handleImgClick","target","tagName","dataset","url","prevProps","prevState","currentSearchQuery","currentPage","imageAPI","newImages","hits","length","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","map","index","webformatURL","largeImageURL","tags","id","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","addEventListener","removeEventListener","createPortal","Overlay","App","showModal","largeImage","handleFormSubmit","handleImageClick","toggleModal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.233c73f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__13wML\",\"image\":\"ImageGalleryItem_image__cC2Kn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__ATlQY\",\"Modal\":\"Modal_Modal__1ds0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__jeNhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1ljTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Mvsx\"};","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchform.module.css';\nimport PropTypes from 'prop-types';\n\nexport default class Searchform extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = {\n    searchQuery: '',\n  };\n\n  handleSearchQueryChange = event => {\n    this.setState({ searchQuery: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    const { searchQuery } = this.state;\n    const { onSubmit } = this.props;\n    event.preventDefault();\n    if (searchQuery.trim() === '') {\n      // toast.error('The request is empty');\n\n      return alert('The request is empty');\n    }\n    onSubmit(searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.label}>Search</span>\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={this.handleSearchQueryChange}\n        />\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport SearchForm from '../Searchform';\nimport s from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ children }) => {\n  return <header className={s.Searchbar}>{children}</header>;\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","function fetchImage(searchQuery, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=19110749-e340c63922b3f8a4d502270f7&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => response.json());\n}\n\nconst api = { fetchImage };\nexport default api;\n","import React, { Component } from 'react';\nimport api from '../../services/images-api';\nimport s from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ smallPicture, largePicture, alt }) => {\n  return (\n    <li className={s.item}>\n      <img\n        src={smallPicture}\n        alt={alt}\n        className={s.image}\n        data-url={largePicture}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  smallPicture: PropTypes.string.isRequired,\n  largePicture: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Spinner.module.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <div className={s.div}>\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Loader from '../Loader';\nimport Button from '../Button';\nimport imageAPI from '../../services/images-api';\nimport PropTypes from 'prop-types';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class ImageGallery extends Component {\n  static propTypes = {\n    searchQuery: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  state = {\n    images: [],\n    error: null,\n    status: Status.IDLE,\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentSearchQuery = this.props.searchQuery;\n    const currentPage = this.state.page;\n    if (prevProps.searchQuery !== currentSearchQuery) {\n      this.setState({ images: [], error: null, status: Status.IDLE, page: 1 });\n    }\n\n    if (\n      prevProps.searchQuery !== currentSearchQuery ||\n      prevState.page !== currentPage\n    ) {\n      this.setState({ status: Status.PENDING });\n\n      imageAPI\n        .fetchImage(currentSearchQuery, currentPage)\n        .then(newImages => {\n          if (newImages.hits.length > 0) {\n            return (\n              this.setState(prevState => ({\n                images: [...prevState.images, ...newImages.hits],\n                status: Status.RESOLVED,\n              })),\n              window.scrollTo({\n                top: document.documentElement.scrollHeight,\n                behavior: 'smooth',\n              })\n            );\n          }\n          return this.setState({\n            error: `по запросу ${currentSearchQuery} ничего не найдено`,\n            status: Status.REJECTED,\n          });\n        })\n        .catch(error => this.setState({ error, status: Status.REJECTED }));\n    }\n  }\n\n  changePageNumber = page => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  handleImgClick = event => {\n    if (event.target.tagName === 'IMG') {\n      this.props.onClick(event.target.dataset.url, event.target.alt);\n    }\n  };\n\n  render() {\n    const { error, images, status } = this.state;\n\n    if (status === 'idle') {\n      return <></>;\n    }\n    if (status === 'pending' || status === 'resolved') {\n      return (\n        <div>\n          <ul className={s.ImageGallery} onClick={this.handleImgClick}>\n            {images.map((image, index) => (\n              <ImageGalleryItem\n                key={`${image.id}${index}`}\n                smallPicture={image.webformatURL}\n                largePicture={image.largeImageURL}\n                alt={image.tags}\n              />\n            ))}\n          </ul>\n          {status === 'resolved' && <Button onClick={this.changePageNumber} />}\n          {status === 'pending' && <Loader />}\n        </div>\n      );\n    }\n\n    if (status === 'rejected') {\n      return <h1>{error}</h1>;\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\nimport { doc } from 'prettier';\n\nconst modalRoot = document.querySelector('#modal-root');\nexport default class Modal extends Component {\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './Searchbar';\nimport Searchform from './Searchform';\nimport ImageGallery from './ImageGallery';\nimport Modal from './Modal';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    showModal: false,\n    largeImage: { src: '', alt: '' },\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  handleImageClick = (src, alt) => {\n    this.setState({ largeImage: { src, alt } });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { searchQuery, largeImage, showModal } = this.state;\n    return (\n      <div>\n        <Searchbar>\n          <Searchform onSubmit={this.handleFormSubmit} />\n        </Searchbar>\n        <ImageGallery\n          searchQuery={searchQuery}\n          onClick={this.handleImageClick}\n        />\n        {showModal && (\n          <Modal\n            src={largeImage.src}\n            alt={largeImage.alt}\n            onClose={this.toggleModal}\n          />\n        )}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchform_SearchForm__GUv7z\",\"button\":\"Searchform_button__36XDP\",\"label\":\"Searchform_label__3PmMX\",\"input\":\"Searchform_input__2r4VB\"};"],"sourceRoot":""}