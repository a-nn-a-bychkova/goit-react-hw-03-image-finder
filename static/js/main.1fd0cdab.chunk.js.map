{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/App.module.css","components/Searchform/Searchform.js","components/Searchbar/Searchbar.js","components/services/images-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","components/App.js","reportWebVitals.js","index.js","components/Searchform/Searchform.module.css"],"names":["module","exports","Searchform","state","searchQuery","handleSearchQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","alert","props","onSubmit","this","className","s","SearchForm","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","Component","Searchbar","children","ImageGalleryItem","smallPicture","largePicture","item","src","image","Spinner","color","height","width","ImageGallery","images","error","status","prevProps","prevState","fetch","then","response","json","length","catch","message","hits","map","index","webformatURL","largeImageURL","id","App","handleFormSubmit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,KAAO,+BAA+B,MAAQ,kC,mBCAhED,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,aAAe,qC,6DCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,IAAM,mB,sICGHC,E,4MACnBC,MAAQ,CACNC,YAAa,I,EAGfC,wBAA0B,SAAAC,GACxB,EAAKC,SAAS,CAAEH,YAAaE,EAAME,cAAcC,MAAMC,iB,EAGzDC,aAAe,SAAAL,GAEb,GADAA,EAAMM,iBACgC,KAAlC,EAAKT,MAAMC,YAAYS,OAGzB,OAAOC,MAAM,wBAGf,EAAKC,MAAMC,SAAS,EAAKb,MAAMC,aAC/B,EAAKG,SAAS,CAAEH,YAAa,M,uDAI7B,OACE,uBAAMY,SAAUC,KAAKN,aAAcO,UAAWC,IAAEC,WAAhD,UACE,wBAAQC,KAAK,SAASH,UAAWC,IAAEG,OAAnC,SACE,sBAAMJ,UAAWC,IAAEI,MAAnB,sBAGF,uBACEL,UAAWC,IAAEK,MACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZlB,MAAOQ,KAAKd,MAAMC,YAClBwB,SAAUX,KAAKZ,iC,GAnCewB,a,iBCIzBC,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,wBAAQb,UAAWC,IAAEW,UAArB,SAAiCC,K,iBCc1C,I,iBCPeC,EARU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAiC,EAAnBC,aACxC,OACE,oBAAIhB,UAAWC,IAAEgB,KAAjB,SACE,qBAAKC,IAAKH,EAAcf,UAAWC,IAAEkB,W,iBCFtBC,G,mLAGjB,OAAO,cAAC,IAAD,CAAQjB,KAAK,YAAYkB,MAAM,UAAUC,OAAQ,GAAIC,MAAO,S,GAHlCZ,cC6DhBa,E,4MACnBvC,MAAQ,CAAEwC,OAAQ,KAAMC,MAAO,KAAMC,OAAQ,Q,iEAC1BC,EAAWC,GAAY,IAAD,OACnCD,EAAU1C,cAAgBa,KAAKF,MAAMX,cACvCa,KAAKV,SAAS,CAAEsC,OAAQ,YACxBG,MAAM,8BAAD,OAC2B/B,KAAKF,MAAMX,YADtC,uGAGF6C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAN,GACJ,GAAIA,EAAOS,OAAS,EAClB,OAAO,EAAK7C,SAAS,CAAEoC,SAAQE,OAAQ,aAEvC,EAAKtC,SAAS,CACZqC,MAAM,2DAAD,OAAgB,EAAK7B,MAAMX,YAA3B,iGACLyC,OAAQ,gBAIbQ,OAAM,SAAAT,GAAK,OAAI,EAAKrC,SAAS,CAAEqC,QAAOC,OAAQ,mB,+BAG3C,IAAD,EAC2B5B,KAAKd,MAA/ByC,EADD,EACCA,MAAOD,EADR,EACQA,OAAQE,EADhB,EACgBA,OACvB,MAAe,SAAXA,EACK,6BAEM,YAAXA,EACK,cAAC,EAAD,IAEM,aAAXA,EACK,6BAAKD,EAAMU,UAEL,aAAXT,EAEA,oBAAI3B,UAAWC,IAAEuB,aAAjB,SACGC,EAAOY,KAAKC,KAAI,SAACnB,EAAOoB,GAAR,OACf,cAAC,EAAD,CAEExB,aAAcI,EAAMqB,aACpBxB,aAAcG,EAAMsB,eAHtB,UACUtB,EAAMuB,IADhB,OACqBH,cAL7B,M,GAjCsC5B,a,sBChB3BgC,E,4MAtCb1D,MAAQ,CACNC,YAAa,I,EAGf0D,iBAAmB,SAAA1D,GACjB,EAAKG,SAAS,CAAEH,iB,uDAgBhB,OACE,gCACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAYY,SAAUC,KAAK6C,qBAG7B,cAAC,EAAD,CAAc1D,YAAaa,KAAKd,MAAMC,cAKtC,cAAC,IAAD,W,GAjCUyB,aCCHkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfA/D,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,MAAQ,0BAA0B,MAAQ,6B","file":"static/js/main.1fd0cdab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__13wML\",\"image\":\"ImageGalleryItem_image__cC2Kn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__jeNhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1ljTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Mvsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__btqmk\"};","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchform.module.css';\n\nexport default class Searchform extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleSearchQueryChange = event => {\n    this.setState({ searchQuery: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchQuery.trim() === '') {\n      // toast.error('The request is empty');\n\n      return alert('The request is empty');\n    }\n    // onSubmit is prop here\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.label}>Search</span>\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={this.state.searchQuery}\n          onChange={this.handleSearchQueryChange}\n        />\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport SearchForm from '../Searchform';\nimport s from './Searchbar.module.css';\n\nconst Searchbar = ({ children }) => {\n  return <header className={s.Searchbar}>{children}</header>;\n};\n\nexport default Searchbar;\n","function fetchImage(searchQuery) {\n  return;\n  fetch(\n    'https://pixabay.com/api/?key=19110749-e340c63922b3f8a4d502270f7&q=yellow+flowers&image_type=photo',\n  )\n    .then(response => response.json())\n    .then(console.log);\n  // fetch(\n  //   'https://pixabay.com/api/?q={searchQuery}&page=1&key=19110749-e340c63922b3f8a4d502270f7&image_type=photo&orientation=horizontal&per_page=12'\n  //     .then(response => {\n  //       if (response.ok) {\n  //         return response.json();\n  //       }\n  //       return Promise.reject(new Error(`Нет картинки по с таким названием `));\n  //     })\n  //     .then(console.log),\n  // );\n}\n\nconst api = { fetchImage };\nexport default api;\n","import React, { Component } from 'react';\nimport api from '../services/images-api';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ smallPicture, largePicture }) => {\n  return (\n    <li className={s.item}>\n      <img src={smallPicture} className={s.image} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Spinner.module.css';\n\nexport default class Spinner extends Component {\n  //other logic\n  render() {\n    return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />;\n  }\n}\n","import React, { Component } from 'react';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Loader from '../Loader';\n\n// export default class ImageGallery extends Component {\n//   state = { images: null, loading: false, error: null };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { searchQuery } = this.props;\n\n//     if (prevProps.searchQuery !== searchQuery) {\n//       // console.log('предыдущие пропы', prevProps.searchQuery);\n//       // console.log('текущие пропы', searchQuery);\n//       this.setState({ loading: true, images: null });\n\n//       fetch(\n//         `https://pixabay.com/api/?q=${searchQuery}&page=1&key=19110749-e340c63922b3f8a4d502270f7&image_type=photo&orientation=horizontal&per_page=12`,\n//       )\n//         .then(response => response.json())\n//         .then(images => {\n//           if (images.length > 0) {\n//             return this.setState({ images });\n//           }\n\n//           return Promise.reject(\n//             new Error(`по запросу ${searchQuery} ничего не найдено`),\n//           );\n//         })\n\n//         .catch(error => this.setState({ error }))\n//         .finally(() => this.setState({ loading: false }));\n//     }\n//   }\n\n//   render() {\n//     const { error, images, loading } = this.state;\n//     return (\n//       <div>\n//         {error && <h1>{error.message}</h1>}\n//         {loading && <Loader />}\n//         {images && (\n//           <ul className={s.ImageGallery}>\n//             {images.hits.map((image, index) => (\n//               <ImageGalleryItem\n//                 key={`${image.id}${index}`}\n//                 smallPicture={image.webformatURL}\n//                 largePicture={image.largeImageURL}\n//               />\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n//code with statuses\n\n// const Status = {\n//   IDLE: 'idle',\n//   PENDING: 'pending',\n//   RESOLVED: 'resolved',\n//   REJECTED: 'rejected',\n// };\n\nexport default class ImageGallery extends Component {\n  state = { images: null, error: null, status: 'idle' };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.searchQuery !== this.props.searchQuery) {\n      this.setState({ status: 'pending' });\n      fetch(\n        `https://pixabay.com/api/?q=${this.props.searchQuery}&page=1&key=19110749-e340c63922b3f8a4d502270f7&image_type=photo&orientation=horizontal&per_page=12`,\n      )\n        .then(response => response.json())\n        .then(images => {\n          if (images.length > 0) {\n            return this.setState({ images, status: 'resolved' });\n          } else {\n            this.setState({\n              error: `по запросу ${this.props.searchQuery} ничего не найдено`,\n              status: 'rejected',\n            });\n          }\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n  render() {\n    const { error, images, status } = this.state;\n    if (status === 'idle') {\n      return <></>;\n    }\n    if (status === 'pending') {\n      return <Loader />;\n    }\n    if (status === 'rejected') {\n      return <h1>{error.message}</h1>;\n    }\n    if (status === 'resolved') {\n      return (\n        <ul className={s.ImageGallery}>\n          {images.hits.map((image, index) => (\n            <ImageGalleryItem\n              key={`${image.id}${index}`}\n              smallPicture={image.webformatURL}\n              largePicture={image.largeImageURL}\n            />\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport Searchbar from './Searchbar';\nimport Searchform from './Searchform';\nimport ImageGallery from './ImageGallery';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nimport Button from './Button';\nimport fetchImage from './services/images-api';\nimport s from './App.module.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  // componentDidMount() {\n  //   this.setState({ loading: true });\n  //   setTimeout(() => {\n  //     fetch(\n  //       'https://pixabay.com/api/?key=19110749-e340c63922b3f8a4d502270f7&q={this.state.searchQuery}&image_type=photo',\n  //     )\n  //       .then(response => response.json())\n  //       .then(images => this.setState({ images }))\n  //       .finally(() => this.setState({ loading: false }));\n  //   }, 2000);\n  // }\n\n  render() {\n    return (\n      <div>\n        <Searchbar>\n          <Searchform onSubmit={this.handleFormSubmit} />\n        </Searchbar>\n\n        <ImageGallery searchQuery={this.state.searchQuery} />\n\n        {/* <Button /> */}\n\n        {/* <Modal /> */}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchform_SearchForm__GUv7z\",\"button\":\"Searchform_button__36XDP\",\"label\":\"Searchform_label__3PmMX\",\"input\":\"Searchform_input__2r4VB\"};"],"sourceRoot":""}